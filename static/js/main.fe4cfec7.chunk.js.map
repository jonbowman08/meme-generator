{"version":3,"sources":["components/App.js","index.js"],"names":["App","state","memeText","memeChunks","tweak","c","Math","random","toLowerCase","toUpperCase","onTextChange","event","target","value","split","map","join","chunks","match","setState","context","this","canvasA","getContext","image","Image","src","onload","drawImage","height","width","font","fillStyle","strokeStyle","textAlign","forEach","text","i","fillText","strokeText","className","onChange","ref","React","Component","ReactDOM","render","document","querySelector"],"mappings":"mNAoEeA,G,kNAhEbC,MAAQ,CAAEC,SAAU,GAAIC,WAAY,I,EAgCpCC,MAAQ,SAAAC,GACN,OAAOC,KAAKC,SAAW,GAAMF,EAAEG,cAAgBH,EAAEI,e,EAGnDC,aAAe,SAAAC,GACb,IAAMT,EAAWS,EAAMC,OAAOC,MAC3BC,MAAM,IACNC,IAAI,EAAKX,OACTY,KAAK,IACFC,EAASf,EAASgB,MAAM,kBAC9B,EAAKC,SAAS,CAAEhB,WAAYc,EAAQf,SAAUA,K,kEAxC3B,IAAD,OACZkB,EAAUC,KAAKC,QAAQC,WAAW,MAClCC,EAAQ,IAAIC,MAClBD,EAAME,IACJ,gGACFF,EAAMG,OAAS,WACbP,EAAQQ,UAAUJ,EAAO,EAAG,EAAG,EAAKF,QAAQO,OAAQ,EAAKP,QAAQQ,U,2CAKnE,IAAMV,EAAUC,KAAKC,QAAQC,WAAW,MAClCC,EAAQ,IAAIC,MAClBD,EAAME,IACJ,gGACFN,EAAQQ,UAAUJ,EAAO,EAAG,EAAGH,KAAKC,QAAQO,OAAQR,KAAKC,QAAQQ,OACjEV,EAAQW,KAAO,qBACfX,EAAQY,UAAY,OACpBZ,EAAQa,YAAc,OACtBb,EAAQc,UAAY,SAChBb,KAAKpB,MAAME,YACbkB,KAAKpB,MAAME,WAAWgC,SAAQ,SAACC,EAAMC,GAGnCjB,EAAQkB,SAASF,EAAM,IAAS,GAAJC,EAAS,IACrCjB,EAAQmB,WAAWH,EAAM,IAAS,GAAJC,EAAS,S,+BAkBnC,IAAD,OACP,OACE,yBAAKG,UAAU,QACb,2BACEC,SAAUpB,KAAKX,aACfG,MAAOQ,KAAKpB,MAAMC,SAClBsC,UAAU,eAEZ,4BACEX,OAAO,QACPC,MAAM,QACNU,UAAU,YACVE,IAAK,SAAApB,GAAO,OAAK,EAAKA,QAAUA,U,GA1DxBqB,IAAMC,YCCxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,cAAc,W","file":"static/js/main.fe4cfec7.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./index.css\";\r\n\r\nclass App extends React.Component {\r\n  state = { memeText: \"\", memeChunks: [] };\r\n\r\n  componentDidMount() {\r\n    const context = this.canvasA.getContext(\"2d\");\r\n    const image = new Image();\r\n    image.src =\r\n      \"https://hips.hearstapps.com/hmg-prod.s3.amazonaws.com/images/mocking-spongebob-1556133078.jpg\";\r\n    image.onload = () => {\r\n      context.drawImage(image, 0, 0, this.canvasA.height, this.canvasA.width);\r\n    };\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    const context = this.canvasA.getContext(\"2d\");\r\n    const image = new Image();\r\n    image.src =\r\n      \"https://hips.hearstapps.com/hmg-prod.s3.amazonaws.com/images/mocking-spongebob-1556133078.jpg\";\r\n    context.drawImage(image, 0, 0, this.canvasA.height, this.canvasA.width);\r\n    context.font = \"normal 30px Impact\";\r\n    context.fillStyle = \"#FFF\";\r\n    context.strokeStyle = \"#000\";\r\n    context.textAlign = \"center\";\r\n    if (this.state.memeChunks) {\r\n      this.state.memeChunks.forEach((text, i) => {\r\n        let verticalLine = 50;\r\n        verticalLine = verticalLine + 50;\r\n        context.fillText(text, 200, i * 50 + 50);\r\n        context.strokeText(text, 200, i * 50 + 50);\r\n      });\r\n    }\r\n  }\r\n\r\n  tweak = c => {\r\n    return Math.random() < 0.5 ? c.toLowerCase() : c.toUpperCase();\r\n  };\r\n\r\n  onTextChange = event => {\r\n    const memeText = event.target.value\r\n      .split(\"\")\r\n      .map(this.tweak)\r\n      .join(\"\");\r\n    const chunks = memeText.match(/.{1,26}(\\s|$)/g);\r\n    this.setState({ memeChunks: chunks, memeText: memeText });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"main\">\r\n        <input\r\n          onChange={this.onTextChange}\r\n          value={this.state.memeText}\r\n          className=\"meme-input\"\r\n        />\r\n        <canvas\r\n          height=\"400px\"\r\n          width=\"400px\"\r\n          className=\"spongebob\"\r\n          ref={canvasA => (this.canvasA = canvasA)}\r\n        ></canvas>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(<App />, document.querySelector(\"#root\"));\r\n"],"sourceRoot":""}